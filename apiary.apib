FORMAT: 1A
HOST: http://www.plyrhub.com

# plyrhub-ranking
Set of resources that allow the management and querying of rankings.
The actions that can be done are the following:

* Query all the rankings available
* Query one ranking 
* Create a new ranking
* Modify an existing ranking
* Delete an existing ranking
* Register a member in a ranking
* Remove a member from a ranking
* Query all the rankings in which a member participates
* Register a member in one or more rankings
* Modify the member position in all the rankings 
* Remove a member from all its rankings

**Platforms**

A ranking can be available in several platforms (web, mobile, iphone...). 
The concept of platform does not relate to a device, it is a totally arbitrary concept and the use of it, is up to the creator. 
The most common use-case is to used this to manage different sets of labels/texts/descriptions depending on some criteria.

**Languages**

The labels/texts/descriptions of the ranking can be in multiple languages. There always must be at least one language.   

<a name="ranking_collections">**Ranking Collections**</a>

Rankings can be grouped in collections (because of some criteria), the effect is that everytime a ranking is updated, the rankings in its collection are also updated.

<a name="ranking_properties">**Ranking properties**</a>

Rankings can have properties that define their behaviour:

| Properties |
| :---------------:|

| Name  | Details   | Values |
| :------------ |:---------------|:---- |
|validityTime|the validity period of the score| YEAR, MONTH, WEEK, ETERNAL |

**Models**

The models used in this API are the following:

>| <a name="ranking_model"/>Ranking |
>| :---------------:|
>
>>| Name  | Description   | Details |
>>| :------------ |:---------------| :---- |
>>|rnk|the id of the ranking| long, required |
>>|name|the short name of the ranking| string, required |
>>|desc|the long name of the ranking| string, required |
>>|members|an aproximate number of the members taken into account in the ranking| long, required |

>| <a name="member_model"/>Member | members of a ranking|
>| :---------------:|:--:|
>
>>| Name  | Description   | Details |
>>| :------------ |:---------------| :---- |
>>|mbr|the id of the member| string, required |
>>|pos|the position of the member in the ranking| long, required |
>>|score|the score(points) of the member| long, required |
>>|place|an indication about whether the member belongs to the top (T) of the ranking or to the bottom (B)| string, required |

>| <a name="platform_model"/>Platform |platform in which a ranking is available|
>| :---------------:|:---:|
>
>>| Name  | Description   | Details |
>>| :------------ |:---------------| :--- |
>>|platform|the id of the platform for the ranking| string, required |
>>|languages|a collection of [languages] (#language_model) in which the platform is available. There must be at least one| Language, required |
>>|default|if this is the default platform for the ranking| boolean, required |

>>| <a name="language_model"/>Language |languages in which a platform is available|
>>| :---------------:|:--:|
>>
>>>| Name  | Description   | Details |
>>>| :------------ |:---------------| :----- |
>>>|lang|the id of the language| string, required |
>>>|name|the short name of the ranking| string, required |
>>>|desc|the long name of the ranking| string, required |
>>>|default|if this is the default language for the platform| boolean, required |

>| <a name="member_position_model"/>Member Position | the position of a member in a ranking |
>| :---------------:|:----:|
>
>>| Name  | Description   | Details |
>>| :------------ |:---------------|:----- |
>>|pos|the position of the member in the ranking| long, required |
>>|score|the score (points) of the member in the ranking| long, required |


# Group Ranking Inventory
   
## Rankings Inventory [/rankings/inventory?collection=all&status=active&platform=web&offset=0&limit=5]
### List all the available rankings [GET]
Returns the list of available rankings. 
The method can be parameterized to return specific textual values for a certain platform, 
and also can paginate the results. Only **active** rankings are returned.
The returned data provide the following information:

* **rankings** : a collection of [Ranking] (#ranking_model) elements

+ Parameters
    + collection (optional, String) ... The collection/s used to query
    + status (optional, boolean) ... The status of the queried rankings (active or not)
    + platform (optional, String) ... The id of the platform queried
    + offset (optional, integer) ... The offset to apply in the pagination process
    + limit (optional, integer) ... The number of items to return 

+ Request 
    + Headers

            Accept-Language: es, en-gb;q=0.8, en;q=0.7

+ Response 200 (application/json)

        {
            "result": {
                "code": 200
            },
            "data": {
                "rankings": [
                    {
                        "rnk": "rAllUsers",
                        "name": "All Users",
                        "desc": "This ranking takes into account all users in the platform",
                        "members": 5000000
                    },
                    {
                        "rnk": "rNewYorkCity",
                        "name": "NYC",
                        "desc": "This ranking takes into account all users in New York City",
                        "members": "300432"
                    },
                    {
                        "rnk": "rMissionWorldDomination",
                        "name": "World Domination",
                        "desc": "This ranking takes into account all users playing Mission World Domination",
                        "members" : "567"
                    }
                ]
            }
        }
        
+ Response 400 (application/json)

        {
            "result": {
                "code": 400,
                "extended": {
                    [
                        {
                            "code": "E400-WRONG-PARAMETER",
                            "desc": "The parameter [param-name] was wrong"
                        }
                    ]
                }
            }
        }

+ Response 500
        
## Ranking Admin [/rankings/inventory/{rnk}]        
### Gets all the info regarding one ranking [GET]
Returns the full information that defines a ranking.  
The data returned is the following:

* **active**: if the ranking is active or not
* **properties**: a set of [properties] (#ranking_properties) that define the behaviour of the ranking
* **collection**: the [collection] (#ranking_collections) of the ranking
* **platforms**: the collection of [Platforms] (#platform_model) in which the ranking will be available. The "default" fields are not mandatory, if they are not specified the first element in the list will be considered the 'default'


+ Parameters
    + rnk (string)... the id of the new ranking

+ Response 200

    + Body
        
            {
                    "active": true,
                    "collection": "all",
                    "properties": [
                        {"validityTime": "ETERNAL"}
                            ],
                    "platforms":[
                    {
                        "platform": "web",
                        "languages": [
                            {
                                "lang": "en",
                                "name": "NYC Rnk",
                                "desc": "The New York City Ranking",
                                "default": true
                            },
                            {
                                "lang": "es",
                                "name": "NYC Rnk",
                                "desc": "El ranking de Nueva York"
                            }
                        ],
                        "default": true
                    },
                    {
                        "platform": "iphone",
                        "languages": [
                            {
                                "lang": "en",
                                "name": "NYC Rnk",
                                "desc": "The NYC Ranking"
                            },
                            {
                                "lang": "es",
                                "name": "NYC Rnk",
                                "desc": "El ranking de NY"
                            }
                        ]
                    },
                ]
            }

+ Response 400 (application/json)

        {
            "result": {
                "code": 400,
                "extended": {
                    [
                        {
                            "code": "E400-WRONG-PARAMETER",
                            "desc": "The parameter [param-name] was wrong"
                        }
                    ]
                }
            }
        }

+ Response 500


### Creates a new ranking [PUT]
Registers a new ranking. A ranking can be overwritten as many times as needed as long as it has not
members registered, once there is at least one member registered, the ranking can only be modified or 
deleted.   
The data that define a ranking are the following:

* **active**: if the ranking is active or not
* **properties**: a set of [properties] (#ranking_properties) that define the behaviour of the ranking
* **collection**: the [collection] (#ranking_collections) of the ranking
* **platforms**: the collection of [Platforms] (#platform_model) in which the ranking will be available. The "default" fields are not mandatory, if they are not specified the first element in the list will be considered the 'default'


+ Parameters
    + rnk (string)... the id of the new ranking

+ Request (application/json)
    + Body
        
            {
                    "active": true,
                    "collection": "all",
                    "properties": [
                        {"validityTime": "ETERNAL"}
                            ],
                    "platforms":[
                    {
                        "platform": "web",
                        "languages": [
                            {
                                "lang": "en",
                                "name": "NYC Rnk",
                                "desc": "The New York City Ranking",
                                "default": true
                            },
                            {
                                "lang": "es",
                                "name": "NYC Rnk",
                                "desc": "El ranking de Nueva York"
                            }
                        ],
                        "default": true
                    },
                    {
                        "platform": "iphone",
                        "languages": [
                            {
                                "lang": "en",
                                "name": "NYC Rnk",
                                "desc": "The NYC Ranking"
                            },
                            {
                                "lang": "es",
                                "name": "NYC Rnk",
                                "desc": "El ranking de NY"
                            }
                        ]
                    },
                ]
            }

+ Response 201

+ Response 400 (application/json)

        {
            "result": {
                "code": 400,
                "extended": {
                    [
                        {
                            "code": "E400-WRONG-PARAMETER",
                            "desc": "The parameter [param-name] was wrong"
                        }
                    ]
                }
            }
        }

+ Response 500

### Modifies the ranking definition [PATCH]
Allows to make change on the definition of the ranking. The modification can affect an existing data, or also can be 
the addition of a full definition for a new language or platform.
The data that define a ranking are the following:

* **active**: if the ranking is active or not
* **properties**: a set of [properties] (#ranking_properties) that define the behaviour of the ranking
* **collection**: the [collection] (#ranking_collections) of the ranking
* **platforms**: the collection of [Platforms] (#platform_model) in which the ranking will be available. The "default" fields are not mandatory, if they are not specified the first element in the list will be considered the 'default'

+ Parameters
    + rnk (string)... the id of the new ranking

+ Request (application/json)
    + Body
        
            {
                    "active": false,
                    "platforms":[
                    {
                        "platform": "web",
                        "languages": [
                            {
                                "lang": "es",
                                "desc": "Ranking de Nueva York"
                            }
                        ]
                    },
                    {
                        "platform": "iphone",
                        "languages": [
                            {
                                "lang": "ru",
                                "name": "NYC Rnk",
                                "desc": "The NYC in Russian"
                            }
                        ]
                    },
                    {
                        "platform": "android",
                        "languages": [
                            {
                                "lang": "en",
                                "name": "NYC Rnk",
                                "desc": "The New York City Ranking"
                            }
                        ]
                    }
                ]
            }

+ Response 200

+ Response 400 (application/json)

        {
            "result": {
                "code": 400,
                "extended": {
                    [
                        {
                            "code": "E400-WRONG-PARAMETER",
                            "desc": "The parameter [param-name] was wrong"
                        }
                    ]
                }
            }
        }
        
+ Response 404

+ Response 500

### Deletes a ranking [DELETE]
Deletes a ranking.

+ Parameters
    + rnk (string)... the id of the ranking to be deleted

+ Response 200

+ Response 400 (application/json)

        {
            "result": {
                "code": 400,
                "extended": {
                    [
                        {
                            "code": "E400-WRONG-PARAMETER",
                            "desc": "The parameter [param-name] was wrong"
                        }
                    ]
                }
            }
        }

+ Response 404

+ Response 500

# Group Ranking Query & Member

## Ranking Query [/rankings/{rnk}?top=7&bottom=9&platform=web]        
### Retrieves all the data related to a ranking [GET]
Returns all the information linked to a certain ranking.
Only **active** rankings can be queried.
The returned data provide the following information:

* **ranking**: a [Ranking](#ranking_model) element
* **members**: a collection of [Member](#member_model) elements

+ Parameters
    + rnk (string)... the id of the ranking
    + top (long)... the first N members of the ranking
    + bottom (long) ... the last N members of the ranking
    + platform (string, optional) ... the id of one of the platforms available

+ Request
    + Headers

            Accept-Language: es, en-gb;q=0.8, en;q=0.7

+ Response 200 (application/json)

        {
            "result": {
                "code": 200
            },
            "data": {
                "ranking": {
                        "rnk": "rAllUsers",
                        "name": "All Users",
                        "desc": "This ranking takes into account all users in the platform",
                        "members": 5000000
                    },
                "members": [
                    {
                        "mbr": "AF5609938390000EF",
                        "pos": 1,
                        "score": 7898766666,
                        "place": "T"
                    },
                    {
                        "mbr": "CDF609938390000EF",
                        "pos": 2,
                        "score": 7898766,
                        "place": "B"
                    }                 
                ]
            }
        }

+ Response 400 (application/json)

        {
            "result": {
                "code": 400,
                "extended": {
                    [
                        {
                            "code": "E400-WRONG-PARAMETER",
                            "desc": "The parameter [param-name] was wrong"
                        }
                    ]
                }
            }
        }

+ Response 404

+ Response 500

## Ranking Member [/rankings/{rnk}/members/{mbr}]        
### Gets the member position [GET]
Gets the member position in a ranking.  
The returned data provide the following information:

* **position**: the [position] (#member_position_model) of the member in the ranking

+ Parameters
    + rnk (string)... the id of the ranking
    + mbr (string)... the id of the member

+ Response 200 (application/json)

    + Body
    
            {
                "pos": "12456",
                "score": "3455677"
            }

+ Response 404

+ Response 500

### Adds/Updates member information [PUT]
Adds a new member to a ranking or updates the score of the member in the ranking.
The information that has to be provided is the following:  

* **score** (long): the score of the member

+ Parameters
    + rnk (string)... the id of the ranking
    + mbr (string)... the id of the member

+ Request (application/json)
    + Body

            {
                "score": 5678899
            }

+ Response 201

+ Response 400 (application/json)

        {
            "result": {
                "code": 400,
                "extended": {
                    [
                        {
                            "code": "E400-WRONG-PARAMETER",
                            "desc": "The parameter [param-name] was wrong"
                        }
                    ]
                }
            }
        }

+ Response 404

+ Response 500

### Removes a member from a ranking [DELETE]
Removes a member from a ranking.

+ Parameters
    + rnk (string)... the id of the ranking
    + mbr (string)... the id of the member

+ Response 200

+ Response 400 (application/json)

        {
            "result": {
                "code": 400,
                "extended": {
                    [
                        {
                            "code": "E400-WRONG-PARAMETER",
                            "desc": "The parameter [param-name] was wrong"
                        }
                    ]
                }
            }
        }

+ Response 404

+ Response 500

# Group Ranking Members

## Members [/members/{mbr}?platform=web]        
### Returns all the rankings for a member [GET]
Returns all the rankings in which a member participates.  
The returned data provide the following information for each ranking:

* **rankings**: a collection of all the **active** rankings in which the member participates.  
For each ranking the following info is returned:  

> * **ranking**: the [ranking] (#ranking_model) definition
> * **position**: the [position] (#member_position_model) of the member in the ranking

+ Parameters
    + mbr (string) ... the id of the member
    + platform (string, optional) ... The id of one of the available platforms
    
+ Request
    + Headers

            Accept-Language: es, en-gb;q=0.8, en;q=0.7

+ Response 200 (application/json)

        {
            "rankings": [
                {
                    "ranking": {
                        "rnk": "rAllUsers",
                        "name": "All Users",
                        "desc": "This ranking takes into account all users in the platform",
                        "members": 5000000
                    },
                    "position": {
                        "pos": "12456",
                        "score": "3455677"
                    }
                },
                {
                    "ranking": {
                        "rnk": "rNewYork",
                        "name": "New York Users",
                        "desc": "This ranking takes into account all users in NYC",
                        "members": 5000000
                    },
                    "position": {
                        "pos": "12456",
                        "score": "1455677"
                    }
                }
            ]
        }

+ Response 400 (application/json)

        {
            "result": {
                "code": 400,
                "extended": {
                    [
                        {
                            "code": "E400-WRONG-PARAMETER",
                            "desc": "The parameter [param-name] was wrong"
                        }
                    ]
                }
            }
        }

+ Response 404

+ Response 500

### Registers a member in a set of rankings [PUT]
Registers a member in a set of rankings.  
The data needed to register the member is the following:

- rankings ... the list of rankings in which the user participates. Initially the score is 0

+ Parameters
    + mbr (string)... the id of the member
    
+ Request (application/json)
    + Body

            {
                "rankings": [
                    "rAllUsers", 
                    "rWorldDomination"
                    ]
            }

+ Response 201

+ Response 400 (application/json)

        {
            "result": {
                "code": 400,
                "extended": {
                    [
                        {
                            "code": "E400-WRONG-PARAMETER",
                            "desc": "The parameter [param-name] was wrong"
                        },
                        {
                            "code": "E400-WRONG-PARAMETER-VALUE",
                            "desc": "The value for parameter [param-name] was wrong"
                        }
                    ]
                }
            }
        }

+ Response 500

### Modifies the member position in all its rankings [POST]
Modifies the member position in all the rankings in which was participating.  
The data needed to register the member is the following:

- **score** ... the score to be applied to all rankings
- **collection** ... the [collection of rankings] (#ranking_collections) to be updated 

+ Parameters
    + mbr (string)... the id of the member
    
+ Request (application/json)
    + Body

            {
                "score": 678999,
                "collection": "cWorldDomination"
            }
            

+ Response 200

+ Response 400 (application/json)

        {
            "result": {
                "code": 400,
                "extended": {
                    [
                        {
                            "code": "E400-WRONG-PARAMETER",
                            "desc": "The parameter [param-name] was wrong"
                        },
                        {
                            "code": "E400-WRONG-PARAMETER-VALUE",
                            "desc": "The value for parameter [param-name] was wrong"
                        }
                    ]
                }
            }
        }

+ Response 500

### Removes a member [DELETE]
Removes a member from all rankings in which was paticipating.

+ Parameters
    + mbr (string)... the id of the member

+ Response 200

+ Response 400 (application/json)

        {
            "result": {
                "code": 400,
                "extended": {
                    [
                        {
                            "code": "E400-WRONG-PARAMETER",
                            "desc": "The parameter [param-name] was wrong"
                        }
                    ]
                }
            }
        }

+ Response 404

+ Response 500